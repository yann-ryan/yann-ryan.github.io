<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Yann Ryan</title>
    <link>https://yann-ryan.github.io/project/</link>
      <atom:link href="https://yann-ryan.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 05 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://yann-ryan.github.io/media/icon_hu64ff187e2bf2a73fa3d6999beaf50dc7_9262_512x512_fill_lanczos_center_2.png</url>
      <title>Projects</title>
      <link>https://yann-ryan.github.io/project/</link>
    </image>
    
    <item>
      <title>Real or Fake News?</title>
      <link>https://yann-ryan.github.io/project/real-or-fake-news/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/real-or-fake-news/</guid>
      <description>&lt;p&gt;I trained the &lt;a href=&#34;https://openai.com/blog/better-language-models/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GPT-2 AI&lt;/a&gt; with the abstracts of the Calendars of State Papers, to produce hundreds of &amp;lsquo;fake&amp;rsquo; abstracts, following this &lt;a href=&#34;https://minimaxir.com/2019/09/howto-gpt2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using the results I built an application which displays two abstracts, one real and one generated by AI, allowing users to vote on which they think is correct. The application keeps a tally of correct results.&lt;/p&gt;
&lt;p&gt;The project makes use of Shinyalerts to display a pop-up window with the result of each guess.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202021-04-26%20at%2011.26.05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202021-04-26%20at%2011.26.22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ship Itineraries</title>
      <link>https://yann-ryan.github.io/project/ship-paths/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/ship-paths/</guid>
      <description>&lt;p&gt;Many of the letters in the Stuart State Papers are sent from aboard ships. These are more difficult to represent geographically than regular letter origins. To do so, we gave each such letter two additional pieces of data: the place of sending and a standardised ship name. Through this, it was possible to trace the journey and letters sent from aboard a single ship.&lt;/p&gt;
&lt;p&gt;With this information, I developed a method for estimating the shortest-path of a ship&amp;rsquo;s journey between each intermediary point it visited. This allowed us to find ships with the longest journey, and may be used to find arbitrary points in space where ships may have overlapped.&lt;/p&gt;
&lt;p&gt;Further refinements will try to take additional information into account, such as known currents and wind speeds.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>State Papers Visual Search</title>
      <link>https://yann-ryan.github.io/project/visual-search/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/visual-search/</guid>
      <description>&lt;p&gt;This application is designed as a way to make searching through a very large mass of documents (the 170,000 letters of the Stuart State Papers) for relevant results easier. Users can enter a keyword in the search bar, which displays a small bar chart of &amp;lsquo;hits&amp;rsquo; for that term per year.&lt;/p&gt;
&lt;p&gt;Clicking and dragging on a year range on that bar chart displays geographic hits, for that period, in a miniature map in another window. Finally, the user draws a shape (either a polygon or rectangle) on the map, which displays all letters with the selected parameters as a network diagram in the main viewing pane.&lt;/p&gt;
&lt;p&gt;Clicking on an &amp;lsquo;edge&amp;rsquo; (a line denoting a letter sent between two individuals) displays all the relevant letters in date order, along with their brief descriptions from the Calendars of State Papers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Temporal Clusters Browswer</title>
      <link>https://yann-ryan.github.io/project/temporal-clusters/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/temporal-clusters/</guid>
      <description>&lt;p&gt;This application was built as a UI layer on top of the results of an algorithm developed by Sebastian Ahnert to detect the presence of short-term temporal clusters in network data.&lt;/p&gt;
&lt;p&gt;The application displays all of the detected clusters on an interactive timeline, built using R and Plotly. Clicking on a cluster in the timeline displays an interactive network diagram in a separate pane.&lt;/p&gt;
&lt;p&gt;The application also lists the letters belonging to the cluster in order, alongside links to the relevant manuscript images in State Papers Online (if these are available internally). It&amp;rsquo;s also possible to filter the timeline by keyword or individual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202021-04-26%20at%2011.15.06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202021-04-26%20at%2011.15.26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>State Papers Online Reference Creator</title>
      <link>https://yann-ryan.github.io/project/external-project/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>UK Coronavirus Test Providers Dashboard</title>
      <link>https://yann-ryan.github.io/project/corona-testers/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://yann-ryan.github.io/project/corona-testers/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
